CREATE TABLE IF NOT EXISTS syllabus_structures (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  prev_id INTEGER,
  title TEXT NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (title),
  FOREIGN KEY (prev_id) REFERENCES syllabus_structures(id) ON DELETE CASCADE
);

CREATE TRIGGER IF NOT EXISTS updated_at
AFTER UPDATE ON syllabus_structures
FOR EACH ROW
BEGIN
  UPDATE syllabus_structures
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;

CREATE TABLE IF NOT EXISTS syllabuses (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  parent_id INTEGER,
  structure_id INTEGER NOT NULL,
  title TEXT NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (parent_id) REFERENCES syllabuses(id) ON DELETE CASCADE,
  FOREIGN KEY (structure_id) REFERENCES syllabus_structures(id) ON DELETE CASCADE
);

CREATE TRIGGER IF NOT EXISTS updated_at
AFTER UPDATE ON syllabuses
FOR EACH ROW
BEGIN
  UPDATE syllabuses
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TRIGGER IF NOT EXISTS updated_at
AFTER UPDATE ON users
FOR EACH ROW
BEGIN
  UPDATE users
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;

CREATE TABLE IF NOT EXISTS user_scores (
  user_id INTEGER NOT NULL,
  syllabus_id INTEGER NOT NULL,
  score REAL NOT NULL,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (user_id, syllabus_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (syllabus_id) REFERENCES syllabuses(id) ON DELETE CASCADE
);

CREATE TRIGGER IF NOT EXISTS updated_at
AFTER UPDATE ON syllabuses
FOR EACH ROW
BEGIN
  UPDATE syllabuses
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;

CREATE TABLE IF NOT EXISTS structures (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  parent_id INTEGER,
  title TEXT NOT NULL,
  syllabus_id INTEGER,
  created_at INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (parent_id) REFERENCES structures(id) ON DELETE CASCADE,
  FOREIGN KEY (syllabus_id) REFERENCES syllabuses(id) ON DELETE CASCADE
);

CREATE TRIGGER IF NOT EXISTS updated_at
AFTER UPDATE ON structures
FOR EACH ROW
BEGIN
  UPDATE structures
  SET updated_at = CURRENT_TIMESTAMP
  WHERE id = OLD.id;
END;
